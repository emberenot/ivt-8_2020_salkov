/*–ù–∞–ø–∏—Å–∞—Ç—å –∫–ª–∞—Å—Å—ã Vector –∏ Matrix –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–¥–Ω–æ–º–µ—Ä–Ω—ã—Ö –∏
–¥–≤—É–º–µ—Ä–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ. –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ 2 –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–æ–π —Ä–∞–±–æ—Ç—ã ‚Ññ1
—Å –ø–æ–º–æ—â—å—é —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤. –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ñ–æ—Ä–º–∏—Ç—å –≤ –≤–∏–¥–µ –º–µ—Ç–æ–¥–æ–≤ –∫–ª–∞—Å—Å–æ–≤.
–í –∫–æ–¥–µ –æ—Ç—Ä–∞–∑–∏—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ:
ÔÇ∑ –í—ã–¥–µ–ª–µ–Ω–∏–µ –∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –ø–∞–º—è—Ç–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞—Ö –∏
–¥–µ—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞—Ö –∫–ª–∞—Å—Å–æ–≤, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.
ÔÇ∑ –í –∫–ª–∞—Å—Å–µ Vector –ø–µ—Ä–µ–≥—Ä—É–∑–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏ []. –í –∫–ª–∞—Å—Å–µ Matrix –¥–æ–±–∞–≤–∏—Ç—å
–º–µ—Ç–æ–¥—ã T at(int i, int j) const –∏ setAt(int i, int j, T val), –∫–æ—Ç–æ—Ä—ã–µ
–ø–æ–∑–≤–æ–ª—è—é—Ç –ø–æ–ª—É—á–∏—Ç—å –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ —Å –∏–Ω–¥–µ–∫—Å–æ–º [i][j], T ‚Äì
—ç—Ç–æ —Ç–∏–ø —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –ø–æ –≤–∞—Ä–∏–∞–Ω—Ç—É (int –∏–ª–∏ double).
ÔÇ∑ –ü–µ—Ä–µ–≥—Ä—É–∑–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞ –∏ –¥–µ–∫—Ä–µ–º–µ–Ω—Ç–∞ (–∫–∞–∫ –ø—Ä–µ—Ñ–∏–∫—Å–Ω–æ–≥–æ, —Ç–∞–∫ –∏
–ø–æ—Å—Ç—Ñ–∏–∫—Å–Ω–æ–≥–æ). –°–º—ã—Å–ª –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞ / –¥–µ–∫—Ä–µ–º–µ–Ω—Ç–∞ –≤—Å–µ–≥–æ –º–∞—Å—Å–∏–≤–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤
–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–µ / –¥–µ–∫—Ä–µ–º–µ–Ω—Ç–µ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞*/
#include <iostream>
#include <iomanip>
#include <stdio.h>
#include <math.h>
#include <cstring>
#include "Vector.h"
#include "Matrix.h"

using namespace std; // —á—Ç–æ–±—ã –Ω–µ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å std::cin


	int rows = 6;//–°—Ç—Ä–æ–∫–∏
	int cols = 3;//–°—Ç–æ–ª–±—Ü—ã
	Vector arr(16);//–°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤
	Matrix arr2d(rows, cols);//–°–æ–∑–¥–∞–µ–º 2–î –º–∞—Å—Å–∏–≤



void arrIN(Vector& arr)
{
	cout << "¬ıÓ‰: "<< endl;
	for (int i = 0; i < 16; i++)
	{
		int tw = 1;
		int tr = 1;

	for (int i = 0; i <= 16; i++)
	{
		if (i % 2 == 0)
		{
			arr[i] = pow(2, tw);
			tw++;
		}
		else
		{
			arr[i] = pow(3, tr);
			tr++;
		};
	}	
	
		cout << arr[i] << "  ";
	}
	cout << endl;
	cout << "¬˚ıÓ‰: "<< endl;
	int tmpmas;
	for (int i = 0; i <= 16 - 1; i++)
	{
		for (int j = 0; j < 16 - i - 1; j++)
		{
			if (arr[j] > arr[j + 1])
			{
				tmpmas = arr[j];
				arr[j] = arr[j + 1];
				arr[j + 1] = tmpmas;
			}
		}
		;
		
		cout << arr[i] << "  ";
		
	}
	cout << endl;
}

void krey2d(Matrix& arr2d, Vector& arr)
{

	for (int i = 0; i < arr2d.GetRows(); i++)//–∏—Å–ø–æ–ª—å–∑—É—é –º–µ—Ç–æ–¥ –∫–ª–∞—Å—Å–∞ 
	{
		for (int j = 0; j < arr2d.GetCols(); j++)
		{
			arr2d[i][j] = arr[i * arr2d.GetCols() + j];
			cout << setw(10) << arr2d[i][j];
		}
		cout << endl;
	}
}

void summ(Matrix& arr2d)
{
	int cnt = 0;
	for (int i = 0; i < 16; i++)
	{
		int tmp = arr[i];
		while (tmp > 0) 
		{ 
    		if (tmp % 10 == 1) 
			{
    			cnt+=1;
			}
    		tmp = tmp/10;
		}
		tmp = 0;
	}
	printf("[cnt] : %d", cnt,"\n");
	printf("\n");

}


int main()
{
	setlocale(LC_ALL, "Russian");//–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏



	arrIN(arr);
	cout << endl;
	cout << "–ú–∞—Å—Å–∏–≤ —Å–æ–∑–¥–∞–Ω" << endl;

	krey2d(arr2d, arr);
	cout << endl;
	cout << "–ú–∞—Å—Å–∏–≤, —Å 1 —Å—Ç—Ä–æ–∫–æ–π - —Å—É–º–º–æ–π –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–æ–∫–∏" << endl;

	summ(arr2d);

	return 0;
}
